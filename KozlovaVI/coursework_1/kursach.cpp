#include <iostream>
#include <fstream>
using namespace std;

void printQuestion(int num) 
{ //Output of questions
    switch (num) {
        case (1): 
            cout << "Когда я над чем-нибудь работаю, я не могу расслабиться, пока не доведу это до совершенства\n"; 
            break;
        case (2): 
            cout << "Я не склонен критиковать кого-то, за то, что он или она слишком легко сдается\n"; 
            break;
        case (3): 
            cout << "В общении с близкими людьми для меня не принципиальна их успешность\n"; 
            break;
        case (4): 
            cout << "Я не критикую своих друзей, если для них приемлемо то, что не безупречно\n"; 
            break;
        case (5): 
            cout << "Мне трудно соответствовать требованиям окружающих\n"; 
            break;
        case (6): 
            cout << "Одна из моих целей - быть совершенным во всем, что я делаю\n"; 
            break;
        case (7): 
            cout << "Все, что делают окружающие, должно быть сделано качественно\n"; 
            break;
        case (8): 
            cout << "Я никогда не задаюсь целью добиться совершенства в том, над чем работаю\n"; 
            break;
        case (9): 
            cout << "Окружающие с пониманием относятся к тому, что я, как и все, могу ошибаться\n"; 
            break;
        case (10): 
            cout << "Меня не раздражает, когда окружающие не делают всего, на что способны\n"; 
            break;
        case (11): 
            cout << "Чем лучше я что-то делаю, тем большего от меня ждут\n"; 
            break;
        case (12): 
            cout << "Мне не особенно нужно быть совершенным\n"; 
            break;
        case (13): 
            cout << "Все, что я сделаю не совсем безупречно, будет рассматриваться окружающими как плохая работа\n"; 
            break;
        case (14): 
            cout << "Я стремлюсь быть как можно совершеннее\n"; 
            break;
        case (15): 
            cout << "Для меня очень важно, чтобы каждая моя попытка была удачной\n"; 
            break;
        case (16): 
            cout << "Я многого жду от людей, которые значимы для меня\n"; 
            break;
        case (17): 
            cout << "Я стремлюсь быть лучшим во всем, что я делаю\n"; 
            break;
        case (18): 
            cout << "Окружающие считают, что я должен быть успешным во всем, чем я занимаюсь\n"; 
            break;
        case (19): 
            cout << "Я не требую многого от окружающих\n"; 
            break;
        case (20): 
            cout << "Я требую от себя не меньшего чем совершенство\n"; 
            break;
        case (21): 
            cout << "Я буду нравиться окружающим, даже если не добьюсь выдающихся успехов во всем\n"; 
            break;
        case (22): 
            cout << "Мне неинтересны люди, которые не стремятся стать лучше\n"; 
            break;
        case (23): 
            cout << "Мне крайне неприятно обнаруживать ошибки в своей работе\n"; 
            break;
        case (24): 
            cout << "Я не требую многого от своих друзей\n"; 
            break;
        case (25): 
            cout << "Если у меня что-то получилось, это означает, что теперь я буду вынужден стараться еще больше, чтобы угодить окружающим\n"; 
            break;
        case (26): 
            cout << "Если я прошу о чем-то, это должно быть сделано безупречно\n"; 
            break;
        case (27): 
            cout << "Я терпеть не могу, когда окружающие допускают ошибки\n"; 
            break;
        case (28): 
            cout << "Я ставлю перед собой большие, труднодостижимые цели\n"; 
            break;
        case (29): 
            cout << "Люди, которые много значат для меня, никогда не должны меня подводить\n"; 
            break;
        case (30): 
            cout << "Окружающие придерживаются хорошего мнения обо мне, даже если у меня что-то не получается\n"; 
            break;
        case (31): 
            cout << "Я чувствую, что люди слишком требовательны ко мне\n"; 
            break;
        case (32):
            cout << "Я всегда должен работать в полную силу\n"; 
            break;
        case (33): 
            cout << "Хотя люди могут этого не показывать, они разочаровываются во мне, когда я совершаю промах\n";
            break;
        case (34):
            cout << "Мне не обязательно быть лучшим во всем, чем я занимаюсь\n";
            break;
        case (35):
            cout << "Моя семья полагает, что я должен быть совершенным, ожидает от меня этого\n";
            break;
        case (36):
            cout << "Я не ставлю перед собой больших, труднодостижимых целей\n";
            break;
        case (37):
            cout << "Мои родители не особенно рассчитывали на то, что я буду успешен во всех сферах моей жизни\n";
            break;
        case (38): 
            cout << "Я уважаю обычных, ничем не выдающихся людей\n"; 
            break;
        case (39): 
            cout << "Люди ожидают от меня не меньшего, чем совершенство\n"; 
            break;
        case (40): 
            cout << "Я очень требователен к себе\n"; 
            break;
        case (41): 
            cout << "Люди ждут от меня большего, чем то, на что я способен\n"; 
            break;
        case (42): 
            cout << "Я всегда должен быть успешным в учебе или работе\n"; 
            break;
        case (43): 
            cout << "Меня не раздражает, когда значимые для меня люди не стараются изо всех сил\n"; 
            break;
        case (44): 
            cout << "Окружающие будут продолжать считать меня компетентным, даже если я допущу ошибку\n"; 
            break;
        case (45): 
            cout << "Я не считаю, что другие люди должны добиваться выдающихся успехов во всем, что они делают\n"; 
            break; 
    }
}

void countBall (int num, int otv, int* pos, int* pod, int* cpp) 
{  //Scoring
    switch (num) {
        case (1):
            *pos = *pos + otv;
            break;
        case (6):
            *pos = *pos + otv;
            break;
        case (14):
            *pos = *pos + otv;
            break;
        case (15):
            *pos = *pos + otv;
            break;
        case (17):
            *pos = *pos + otv;
            break;
        case (20):
            *pos = *pos + otv;
            break;
        case (23):
            *pos = *pos + otv;
            break;
        case (28):
            *pos = *pos + otv;
            break;
        case (32):
            *pos = *pos + otv;
            break;
        case (40):
            *pos = *pos + otv;
            break;
        case (42):
            *pos = *pos + otv;
            break;
            *pos = *pos + otv; 
            break;
        case (8):
            *pos = *pos + (8 - otv);
            break;
        case (12):
            *pos = *pos + (8 - otv);
            break;
        case (34):
            *pos = *pos + (8 - otv);
            break;
        case (36): 
            *pos = *pos + (8 - otv); 
            break;
        case (7):
            *pod = *pod + otv;
            break;
        case (16):
            *pod = *pod + otv;
            break;
        case (22):
            *pod = *pod + otv;
            break;
        case (26):
            *pod = *pod + otv;
            break;
        case (27):
            *pod = *pod + otv;
            break;
        case (29): 
            *pod = *pod + otv; 
            break;
        case (2):
            *pod = *pod + (8 - otv);
            break;
        case (3):
            *pod = *pod + (8 - otv);
            break;
        case (4):
            *pod = *pod + (8 - otv);
            break;
        case (10):
            *pod = *pod + (8 - otv);
            break;
        case (19):
            *pod = *pod + (8 - otv);
            break;
        case (24):
            *pod = *pod + (8 - otv);
            break;
        case (38):
            *pod = *pod + (8 - otv);
            break;
        case (43):
            *pod = *pod + (8 - otv);
            break;
        case (45): 
            *pod = *pod + (8 - otv); 
            break;
        case (5):
            *cpp = *cpp + otv;
            break;
        case (11):
            *cpp = *cpp + otv;
            break;
        case (13):
            *cpp = *cpp + otv;
            break;
        case (18):
            *cpp = *cpp + otv;
            break;
        case (25):
            *cpp = *cpp + otv;
            break;
        case (31):
            *cpp = *cpp + otv;
            break;
        case (33):
            *cpp = *cpp + otv;
            break;
        case (35):
            *cpp = *cpp + otv;
            break;
        case (39):
            *cpp = *cpp + otv;
            break;
        case (41): 
            *cpp = *cpp + otv; 
            break;
        case (9):
            *cpp = *cpp + (8 - otv);
            break;
        case (21):
            *cpp = *cpp + (8 - otv);
            break;
        case (30):
            *cpp = *cpp + (8 - otv);
            break;
        case (37):
            *cpp = *cpp + (8 - otv);
            break;
        case (44): 
            *cpp = *cpp + (8 - otv); 
            break;
    }
}

void getPercent(int* pos, int* pod, int* cpp, int* sum) 
{ //Converting points to percentages
    *pos = *pos * 100 / 105;
    *pod = *pod * 100 / 105;
    *cpp = *cpp * 100 / 105;
    *sum = *sum * 100 / 315;
}

int getK(int pr) 
{
    if (pr < 55) {
        return 1; 
    }
    else if (pr > 80) {
            return 3; 
         }
         else {
            return 2; 
         } 
}

void printResult(int pos, int pod, int cpp, int sum) 
{
    int s = getK(pos);
    int d = getK(pod);
    int p = getK(cpp);
    int m = getK(sum);

    ofstream File("rez.txt");
    File << "Эта шкала была разработана психологами П.Л. Хьюиттом (P.L. Hewitt) и Г.Л. Флеттом (G.L. Flett) для измерения степени перфекционизма и его составляющих. По мнению авторов, перфекционизм — это стремление быть на высоте, совершенным во всем. Перфекционизм состоит из трех компонентов:\n";
    File << "Ориентированный на себя — слишком высокие требования выдвигаются именно в свой адрес;\n";
    File << "Ориентированный на других — высокие требования адресуются другим людям;\n";
    File << "Социально предписанный перфекционизм — человек убежден, что окружающие люди и общество предъявляют ему высокие и нереалистичные требования.\n";
    File << "Считается, что если в общей структуре перфекционизма преобладает тот или иной компонент, то он может быть связан с определенными расстройствами. Например, высокий уровень ориентированного на других людей компонента, может говорить о наличии или развитии нарциссических или демонстративных черт — независимо от общего количества баллов по шкале.\n";
    File << "Предлагаем вам ознакомиться с вашими результатами.\n";
    switch (s) {
        case(1): 
            File << "Уровень перфекционизма ориентированного на себя составляет " << pos << " %, что соответствует уровню ниже среднего.\n" 
                 << "Это значит, что вам не свойственно иметь завышенные и нереалистичные требования к себе, вы редко занимаетесь самокопанием и самокритикой, принимаете свои неудачи и недостатки как что-то обыденное и привычное, будто вы и не ожидали другого." << endl; 
            break;
        case(2): 
            File << "Уровень перфекционизма ориентированного на себя составляет " << pos << " %, что соответствует среднему уровню.\n" 
                 << "Это значит, что вы предъявляете себе адекватные требования и активно следуете им. Вы объективно оцениваете свои возможности, находите свои изъяны и недостатки, но не расстраиваетесь, а активно работаете над ними." << endl; 
            break;
        case(3): 
            File << "Уровень перфекционизма ориентированного на себя составляет " << pos << " %, что соответствует высокому уровню требований к себе.\n" 
                 << "Это значит, что вам свойственно иметь завышенные и нереалистичные требования в отношении себя, вы часто занимаетесь критикой и самокопанием, в связи с чем не можете принять свои изъяны и недостатки." << endl; 
            break;
    }
    switch (d) {
        case(1): 
            File << "Уровень перфекционизма ориентированного на других составляет " << pod << " %, что соответствует уровню ниже среднего.\n" 
                 << "Это значит, что вам не свойственно предъявлять завышенные требования к окружающим вас людям. Для вас совершенно не играет роли их успех в какой-либо области, вы не обращаете внимания на их изъяны и недостатки, даже если они серьезные." << endl; 
            break;
        case(2): 
            File << "Уровень перфекционизма ориентированного на других составляет " << pod << " %,что соответствует среднему уровню\n" 
                 << "Это значит, что вы предъявляете окружающим адекватные требования, которым они могут соотвтетсвовать без особых трудностей. Вы объективно оцениваете все их поступки, успехи, изъяны и недостатки, не зацикливаясь на них, но учитывая наиболее серьезные из них при общении." << endl; 
            break;
        case(3): 
            File << "Уровень перфекционизма ориентированного на других составляет " << pod << " %, что соответствует высокому уровню требований.\n" 
                 << "Это значит, что вам свойственно предъявлять окружающим завышенные требования, ожидать от них чего-то нереального. Вы замечаете все изъяны и недостатки окружающих, не упуская возможности указать на них. Для вас важено, чтобы рядом были успешные люди." << endl; 
            break;
    }
    switch (p) {
        case(1): 
            File << "Уровень социально предписанного перфекционизма составляет " << cpp << " %, что соответствует уровню ниже среднего.\n" 
                 << "Вы совершенно не замечаете того, что окружающие вас люди ожидают от вас чего-то нереального. Вам не свойственно ощущать давление со стороны близких. Они редко указывают вам на ваши недостатки и принимают вас именно такими, какие вы есть." << endl; 
            break;
        case(2): 
            File << "Уровень социально предписанного перфекционизма составляет " << cpp << " %, что соответствует среднему уровню.\n" 
                 << "Вам кажется, что кружающие предъявляют вам адекватные требования, которым не очень затруднительно соответствовать. Они принимают вас, лишь иногда указывая на ваши ошибки и недостатки, но лишь тогда, когда это необходимо." << endl; 
            break;
        case(3): 
            File << "Уровень социально предписанного перфекционизма составляет " << cpp << " %, что соответствует высокому уровню требований окружающих.\n" 
                 << "Вы убеждены, что другие предъявляют вам нереалистичные требования, которым трудно, но необходимо соответствовать, чтобы заслужить их одобрение и принятие." << endl; 
            break;
    }
    switch (m) {
        case(1): 
            File << "Общий уровень перфекционизма равен " << sum << " %, что соответствует уровню ниже среднего.\n" 
                 << "Вам совершенно не свойственно стремиться к совершенству. Вы живете так, как живете, не обращая внимания на какие-либо изъяны и недостатки. Зачастую ваша жизнь походит на хаос, потому что вас не заботит порядок в ней - вы больше увлечены происходящим, вам некогда всё структурировать и анализировать. Вам свойственно не доводить работу до конца. Как только дело вам наскучит, вы тут же его бросите." << endl; 
            break;
        case(2): 
            File << "Общий уровень перфекционизма равен " << sum << " %, что соответствует среднему уровню.\n" 
                 << "Вы любите порядок и структурированность, у вас редко бывает беспорядок и спутанность мыслей в голове. Однако, это вовсе не значит, что вы стремитесь к тому, чтобы идеальным было всё. Вы балансируете на грани между идеальным педантичным порядком и хаосом. " << endl; 
            break;
        case(3): 
            File << "Общий уровень перфекционизма равен " << sum << " %, что соответствует высокому уровню.\n" 
                 << "Вы тот самый человек, который стремится к тому, чтобы всё было идеально от и до. Если вы работаете в офисе, то порядок должен быть не только у вас на столе, но и у всех, кто находится с вами в одном помещении. Вы будете держать рядом с собой только тех людей, что относятся к жизни также как и вы, то есть соблюдают идеальный порядок и в жизни, и в голове." << endl; 
            break;
    }
    File.close();
}

int main()
{
    setlocale(LC_ALL, "Russian");

    cout << "Предлагаем вам пройти тестирование по Многомерной шкале перфекционизма Хьюитта-Флетта\n" 
         << "Краткую теорию по методике вы получите после прохождения тестирования вместе со своими результатами\n";
    cout << "Просьба оценить ответ на каждый поврос по 7-бальной шкале в соответствии с указанной системой:\n";
    cout << "1 - Совершенно не согласен\n" << "2 - Не согласен, но бывают исключения\n" 
         << "3 - Чаще не согласен\n" << "4 - 50 на 50\n" << "5 - Чаще согласен\n" 
         << "6 - Согласен, но бывают исключения\n" << "7 - Совершенно согласен\n";
    cout << "Чтобы начать введите любую цифру";

    int otv; //Possible answer
    //We set three variables that store the score for the three categories of perfectionism
    int pos = 0; //self oriented perfectionism
    int pod = 0; //socially oriented perfectionism
    int cpp = 0; //socially pre-scripted perfectionism
    cin >> otv;
    for (int num = 1; num < 46; num++) { //Display 45 questions, scanand process answers
        printQuestion(num);
        cin >> otv;
        while (otv < 1 || otv > 7) {
            cout << "Неверный формат ответа. Введите число от 1 до 7 в зависимости от степени согласия, согласно шкале\n";
            cin >> otv;
        }
       
        countBall(num, otv, &pos, &pod, &cpp);
    }
    
    int sum = pos + pod + cpp;
    getPercent(&pos, &pod, &cpp, &sum); //Converting points to percentages
    cout << "Подсчет результата. Пожалуйста, подождите...\n";
    cout << "Ваши проценты:\n" << "ПОС: " << pos << "%\n" 
         << "ПОД: " << pod << "%\n" << "СПП: " << cpp << "%\n" 
         << "Общий уровень: " << sum << "%\n";
    cout << "Подробные результаты выведены в файл\n";
    printResult(pos, pod, cpp, sum);
    return 0;
}

